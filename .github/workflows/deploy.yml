name: Docker Push to ECR and Scan

on:
  push:
    branches:
      - main  # Cambia a la rama donde quieres activar el workflow

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Login to Amazon ECR
	  id: login-ecr
	  uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR
        env:
	  REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-repo
          AWS_ACCOUNT_ID: 325436486329
          AWS_REGION: eu-west-1
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  scan-image:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Vision One Container Security Scan Action
        uses: trendmicro/tmas-scan-action@version*
        with:
          TMAS_API_KEY: ${{ secrets.TMAS_API_KEY }}
          REGION: us-east-1
          VULNERABILITY_SCAN: true
          SBOM: true
          MALWARE_SCAN: true
          SECRETS_SCAN: true
          IMAGE: my-repo:latest
          LOCAL_IMAGE_TARBALL: image.tar
          MAX_TOTAL: 5
          MAX_CRITICAL: 1
          MAX_HIGH: 1
          MAX_MEDIUM: 1
          MAX_LOW: 0
          MAX_NEGLIGIBLE: 0
          MAX_UNKNOWN: 0
          SCAN_RESULT_ARTIFACT: result.json

  deploy-to-k8s:
    needs: scan-image
    runs-on: ubuntu-latest
    if: success()
    
    steps:
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s-deployment.yml

